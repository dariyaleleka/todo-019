{"version":3,"sources":["Layouts/Header.js","store/actions.js","components/AddTask/index.js","components/TaskList/index.js","components/TaskFilter/index.js","serviceWorker.js","store/modifyTasksReducer.js","store/reducer.js","store/filterTasksReducer.js","index.js","App.js"],"names":["withStyles","root","flexGrow","marginBottom","props","react_default","a","createElement","className","classes","AppBar_default","position","color","Toolbar_default","Typography_default","variant","addNewTask","task","type","ADD_NEW_TASK","payload","AddTask","state","handleChange","e","_this","setState","target","value","submitHandler","preventDefault","console","log","_this2","this","_this$props","Grid_default","container","spacing","item","xs","sm","md","Paper_default","paper","form","onSubmit","event","TextField_default","id","label","textField","onChange","margin","Button_default","button","Component","theme","justifyContent","padding","unit","textAlign","marginLeft","marginRight","display","alignItems","connect","Object","objectSpread","dispatch","bindActionCreators","title","setTaskDone","DONE_TASK","setTaskRemove","REMOVE_TASK","tasks","modifyTasksReducer","filterTasksReducer","tasksToShow","SHOW_DONE_TASKS","filter","el","done","SHOW_REMOVE_TASKS","remove","react","map","index","taskClassName","key","Grid_Grid_default","Paper_Paper_default","component","gutterBottom","name","IconButton_default","aria-label","onClick","Done_default","Delete_default","TaskFilter","showAllTasksHandler","showDoneTasksHandler","showRemoveTasksHandler","innerText","Tabs_default","indicatorColor","textColor","centered","Tab_default","SHOW_ALL_TASKS","Boolean","window","location","hostname","match","initState","combineReducers","arguments","length","undefined","action","concat","toConsumableArray","i","__webpack_require__","d","__webpack_exports__","store","createStore","reducer","__REDUX_DEVTOOLS_EXTENSION__","getState","ReactDOM","render","es","Layouts_Header","components_AddTask","components_TaskFilter","components_TaskList","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.add62012.chunk.js","sourcesContent":["import React from 'react';\n\nimport { withStyles } from '@material-ui/core/styles';\nimport AppBar from '@material-ui/core/AppBar';\nimport Toolbar from '@material-ui/core/Toolbar';\nimport Typography from '@material-ui/core/Typography';\n\nconst styles = {\n    root: {\n        flexGrow: 1,\n        marginBottom: 30\n    },\n};\n\nconst Header = props => (\n    <div className={props.classes.root}>\n        <AppBar position=\"static\" color=\"default\">\n            <Toolbar>\n                <Typography variant=\"h6\" color=\"inherit\">\n                   <h3> To Do List</h3>\n                </Typography>\n            </Toolbar>\n        </AppBar>\n    </div>\n);\n\nexport default withStyles(styles)(Header);","import {ADD_NEW_TASK, DONE_TASK, REMOVE_TASK, SHOW_ALL_TASKS, SHOW_DONE_TASKS, SHOW_REMOVE_TASKS} from \"../index\";\n\nexport const addNewTask = (task) => {\n    return {\n        type: ADD_NEW_TASK,\n        payload: task\n    }\n};\n\nexport const doneTask = (task_id) => {\n    return {\n        type: DONE_TASK,\n        payload: task_id\n    }\n};\n\nexport const removeTask = (task_id) => {\n    return {\n        type: REMOVE_TASK,\n        payload: task_id\n    }\n};\n\nexport const showAllTasks = () => {\n    return {\n        type: SHOW_ALL_TASKS,\n        payload: \"SHOW_ALL_TASKS\"\n    }\n};\n\nexport const showDoneTasks = () => {\n    return {\n        type: SHOW_DONE_TASKS,\n        payload: \"SHOW_DONE_TASKS\"\n    }\n};\n\nexport const showRemoveTasks = () => {\n    return {\n        type: SHOW_REMOVE_TASKS,\n        payload: \"SHOW_REMOVE_TASKS\"\n    }\n};","import React, {Component} from 'react';\n\nimport { withStyles } from '@material-ui/core/styles';\nimport Grid from '@material-ui/core/Grid';\nimport Paper from '@material-ui/core/Paper';\nimport TextField from '@material-ui/core/TextField';\nimport Button from '@material-ui/core/Button';\n\nimport connect from \"react-redux/es/connect/connect\";\nimport {bindActionCreators} from \"redux\";\nimport {addNewTask} from \"../../store/actions\";\n\nconst styles = theme => ({\n    root: {\n        flexGrow: 1,\n    },\n    container: {\n        justifyContent: \"center\"\n    },\n    paper: {\n        padding: theme.spacing.unit * 2,\n        textAlign: 'center',\n    },\n    textField:{\n        marginLeft: theme.spacing.unit,\n        marginRight: theme.spacing.unit,\n    },\n    button: {\n        margin: theme.spacing.unit,\n    },\n    form: {\n        display: \"flex\",\n        justifyContent: \"center\",\n        alignItems: \"center\"\n    }\n});\n\nclass AddTask extends Component{\n\n    state = {\n        task: \"\"\n    };\n\n    render() {\n        {\n            const {classes,addNewTask} = this.props;\n            return (\n                <div className={classes.root}>\n                    <Grid container spacing={24} className={classes.container}>\n                        <Grid item xs={10} sm={8} md={6}>\n                            <Paper className={classes.paper}>\n                                <form className={classes.form} onSubmit={(event) => {\n                                    this.submitHandler(event, addNewTask)\n                                }}>\n                                    <TextField\n                                        id=\"outlined-name\"\n                                        label=\"Enter new Task\"\n                                        className={classes.textField}\n                                        value={this.state.task}\n                                        onChange={this.handleChange}\n                                        margin=\"normal\"\n                                        variant=\"outlined\"\n                                    />\n                                    <Button type=\"submit\" variant=\"outlined\" color=\"primary\" className={classes.button}>\n                                        Add task\n                                    </Button>\n                                </form>\n                            </Paper>\n\n                        </Grid>\n                    </Grid>\n                </div>\n            )\n        }\n    }\n\n    handleChange = (e) => {\n        this.setState({\n            task: e.target.value\n        });\n    };\n\n    submitHandler = (e,addNewTask) => {\n        e.preventDefault();\n        console.log(\"submitHandler\",e.target[0].value);\n        addNewTask(this.state.task);\n        this.setState({\n            task: \"\"\n        });\n    };\n}\n\nconst putStateToProps = (state) => {\n    return {\n        ...state\n    }\n};\n\nconst putActionsToComponent = (dispatch) => {\n    return {\n        addNewTask: bindActionCreators(addNewTask,dispatch)\n    }\n};\n\nexport default withStyles(styles)(connect(\n    putStateToProps,\n    putActionsToComponent\n)(AddTask));","import React, {Fragment} from 'react';\n\nimport './style.css';\n\nimport {doneTask, removeTask} from \"../../store/actions\";\nimport {connect} from \"react-redux\";\n\nimport { withStyles } from '@material-ui/core/styles';\nimport Grid from \"@material-ui/core/Grid/Grid\";\nimport Paper from \"@material-ui/core/Paper/Paper\";\nimport Typography from '@material-ui/core/Typography';\nimport IconButton from '@material-ui/core/IconButton';\nimport DeleteIcon from '@material-ui/icons/Delete';\nimport DoneIcon from '@material-ui/icons/Done';\nimport {SHOW_ALL_TASKS, SHOW_DONE_TASKS, SHOW_REMOVE_TASKS} from \"../../index\";\n\nconst styles = theme => ({\n    root: {\n        flexGrow: 1,\n    },\n    container: {\n        justifyContent: \"center\"\n    },\n    paper: {\n        padding: theme.spacing.unit * 2,\n        textAlign: 'center',\n    },\n    title: {\n        textAlign: \"left\"\n    },\n});\n\nconst TaskList = (props) => {\n\n    const {modifyTasksReducer:{tasks}, setTaskDone, setTaskRemove,classes,filterTasksReducer} = props;\n    console.log(props);\n\n    let tasksToShow = tasks;\n    switch (filterTasksReducer) {\n        case SHOW_DONE_TASKS:\n            tasksToShow = tasks.filter(el => el.done);\n            break;\n        case SHOW_REMOVE_TASKS:\n            tasksToShow = tasks.filter(el => el.remove);\n            break;\n    }\n\n    return (\n        <Fragment>\n            {tasksToShow.map((el, index) => {\n                const taskClassName = classes.paper + (el.done?\" task-done\":\"\") + (el.remove?\" task-remove\":\"\");\n                return (\n                    <div className={classes.root} key={index}>\n                        <Grid container spacing={24} className={classes.container}>\n                            <Grid item xs={10} sm={8} md={6}>\n                                <Paper className={taskClassName}>\n                                    <Grid container spacing={24} className={classes.container}>\n                                        <Grid item xs={10}>\n                                            <Typography className={classes.title} component=\"h2\" variant=\"h4\" gutterBottom>\n                                                {el.name}\n                                            </Typography>\n                                        </Grid>\n                                        <Grid item xs={2}>\n                                            {\n                                                el.remove?\"\"\n                                                    :\n                                                    (\n                                                        <Fragment>\n                                                            <IconButton className={classes.button} aria-label=\"Done\" onClick={() => setTaskDone(index)}>\n                                                                <DoneIcon />\n                                                            </IconButton>\n                                                            <IconButton className={classes.button} aria-label=\"Delete\" onClick={() => setTaskRemove(index)}>\n                                                                <DeleteIcon />\n                                                            </IconButton>\n                                                        </Fragment>\n                                                    )\n                                            }\n                                        </Grid>\n                                    </Grid>\n                                </Paper>\n                            </Grid>\n                        </Grid>\n                    </div>\n                )\n            })}\n        </Fragment>\n    )\n};\n\nconst mapStateToProps = state => ({...state});\nconst mapActionsToProps = dispatch =>{\n    return {\n        setTaskDone: task => dispatch(doneTask(task)),\n        setTaskRemove: task => dispatch(removeTask(task)),\n    }\n};\n\nexport default withStyles(styles)(connect(mapStateToProps,mapActionsToProps)(TaskList));\n","import React, {Component} from 'react';\n\nimport { withStyles } from '@material-ui/core/styles';\nimport Grid from \"@material-ui/core/Grid/Grid\";\nimport Paper from \"@material-ui/core/Paper/Paper\";\nimport Tabs from '@material-ui/core/Tabs';\nimport Tab from '@material-ui/core/Tab';\n\nimport {connect} from \"react-redux\";\nimport {showAllTasks, showDoneTasks, showRemoveTasks} from \"../../store/actions\";\n\nconst styles = theme => ({\n    root: {\n        flexGrow: 1,\n    },\n    container: {\n        justifyContent: \"center\"\n    },\n    paper: {\n        padding: theme.spacing.unit * 2,\n        textAlign: 'center',\n    },\n});\n\nclass TaskFilter extends Component {\n    state = {\n        value: 0,\n    };\n\n    handleChange = (event, value) => {\n        this.setState({ value });\n\n        const {showAllTasksHandler,showDoneTasksHandler,showRemoveTasksHandler} = this.props;\n\n        switch (event.target.innerText) {\n            case \"ALL\":\n                showAllTasksHandler();\n                break;\n            case \"DONE\":\n                showDoneTasksHandler();\n                break;\n            case \"REMOVE\":\n                showRemoveTasksHandler();\n                break;\n        }\n    };\n\n    render(){\n        const {classes} = this.props;\n        return (\n            <div className={classes.root}>\n                <Grid container spacing={24} className={classes.container}>\n                    <Grid item xs={10} sm={8} md={6}>\n                        <Paper className={classes.paper}>\n                            <Tabs\n                                value={this.state.value}\n                                onChange={this.handleChange}\n                                indicatorColor=\"primary\"\n                                textColor=\"primary\"\n                                centered\n                            >\n                                <Tab label=\"All\" />\n                                <Tab label=\"Done\" />\n                                <Tab label=\"Remove\" />\n                            </Tabs>\n                        </Paper>\n                    </Grid>\n                </Grid>\n            </div>\n        )\n    }\n\n}\n\nconst mapStateToProps = (state) => ({...state});\nconst mapActionsToProps = (dispatch) => ({\n    showAllTasksHandler: () => dispatch(showAllTasks()),\n    showDoneTasksHandler: () => dispatch(showDoneTasks()),\n    showRemoveTasksHandler: () => dispatch(showRemoveTasks()),\n});\n\nexport default withStyles(styles)(\n    connect(mapStateToProps,mapActionsToProps)(TaskFilter)\n);","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import {ADD_NEW_TASK, DONE_TASK, REMOVE_TASK} from \"../index\";\n\nconst initState = {\n    tasks: [\n        {name: \"Wake up\", done:false, remove:false}\n    ],\n};\n\nexport default (state=initState,action) => {\n\n    console.log(action);\n\n    switch (action.type) {\n        case ADD_NEW_TASK:\n            return {\n                ...state, tasks: [...state.tasks, {name: action.payload, done:false, remove:false}]\n            };\n        case DONE_TASK:\n            return {\n                // ...state, tasks: state.tasks\n                ...state, tasks: state.tasks.map((el, i) => action.payload === i?{...el, done:true}:el)\n            };\n        case REMOVE_TASK:\n            return {\n                // ...state, tasks: state.tasks\n                ...state, tasks: state.tasks.map((el, i) => action.payload === i?{...el, remove:true}:el)\n            };\n    }\n    return state;\n};","import {combineReducers} from \"redux\";\n\nimport modifyTasksReducer from './modifyTasksReducer';\nimport filterTasksReducer from './filterTasksReducer';\n\nexport default combineReducers({\n    modifyTasksReducer,\n    filterTasksReducer\n})","import {SHOW_ALL_TASKS, SHOW_DONE_TASKS, SHOW_REMOVE_TASKS} from \"../index\";\n\nexport default (state=\"SHOW_ALL_TASKS\",action) => {\n\n    console.log(action);\n\n    switch (action.type) {\n        case SHOW_ALL_TASKS:\n            return action.payload;\n        case SHOW_DONE_TASKS:\n            return action.payload;\n        case SHOW_REMOVE_TASKS:\n            return action.payload;\n    }\n    return state;\n};","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nimport {createStore} from \"redux\";\nimport {Provider} from 'react-redux';\nimport reducer from \"./store/reducer\";\n\nexport const ADD_NEW_TASK = \"ADD_NEW_TASK\";\nexport const DONE_TASK = \"DONE_TASK\";\nexport const REMOVE_TASK = \"REMOVE_TASK\";\nexport const SHOW_ALL_TASKS = \"SHOW_ALL_TASKS\";\nexport const SHOW_DONE_TASKS = \"SHOW_DONE_TASKS\";\nexport const SHOW_REMOVE_TASKS = \"SHOW_REMOVE_TASKS\";\n\nconst store = createStore(reducer, window.__REDUX_DEVTOOLS_EXTENSION__ && window.__REDUX_DEVTOOLS_EXTENSION__());\n\nconsole.log(store.getState());\n\nReactDOM.render(\n    <Provider store={store}>\n        <App />\n    </Provider>, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n","import React from 'react';\n\nimport Header from \"./Layouts/Header\";\nimport AddTask from \"./components/AddTask\";\nimport TaskList from \"./components/TaskList\";\nimport TaskFilter from \"./components/TaskFilter\";\n\nexport default props => (\n    <div>\n        <Header/>\n\n        <AddTask/>\n\n        <TaskFilter/>\n\n        <TaskList tasks={props.tasks}/>\n    </div>\n);"],"sourceRoot":""}